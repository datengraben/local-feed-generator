# Official language image. Look for the different tagged releases at:
# https://hub.docker.com/r/library/python/tags/
image: python:3.10-bookworm

# Change pip's cache directory to be inside the project directory since we can
# only cache local items.
variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

# https://pip.pypa.io/en/stable/topics/caching/
cache:
  paths:
    - .cache/pip

before_script:
  ##
  ## Install ssh-agent if not already installed, it is required by Docker.
  ## (change apt-get to yum if you use an RPM-based image)
  ##
  - 'command -v ssh-agent >/dev/null || ( apt-get update -y && apt-get install openssh-client -y )'

  ##
  ## Run ssh-agent (inside the build environment)
  ##
  - eval $(ssh-agent -s)

  ##
  ## Give the right permissions, otherwise ssh-add will refuse to add files
  ## Add the SSH key stored in SSH_PRIVATE_KEY file type CI/CD variable to the agent store
  ##
  - chmod 400 "$SSH_PRIVATE_KEY"
  - ssh-add "$SSH_PRIVATE_KEY"

  ##
  ## Create the SSH directory and give it the right permissions
  ##
  - mkdir -p ~/.ssh
  - chmod 700 ~/.ssh

  # Set the locale
  - python --version ; pip --version  # For debugging
  - pip install virtualenv
  - virtualenv venv
  - source venv/bin/activate


stages:          # List of stages for jobs, and their order of execution
  - build
  - test
  - deploy

scrape-job:       # This job runs in the build stage, which runs first.
  stage: build
  script:
    - apt-get update && apt-get install -y locales locales-all
    - dpkg-reconfigure locales
    - export LC_ALL=de_DE.UTF-8
    - export LANG=de_DE.UTF-8 
    - dpkg-reconfigure locales
    - pip install -r requirements.txt 
    - apt-get install libxml2-utils
    - sh run.sh
    - git config user.name "Automated"
    - git config user.email "actions@noreply.git.datengraben.com"
    - git remote add gitlab_origin https://oauth2:$APPLICATION_TOKEN@git.shannes.de/events-scraper.git 
    - git add atom.xml
    - timestamp=$(date -u)
    - git commit -m "Latest data from ${timestamp}" || exit 0
    - git push gitlab_origin HEAD:master -o ci.skip # prevent triggering pipeline again 
    - apt-get install -y rsync
    - sh deploy.sh
